<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android" 
    xmlns:tools="http://schemas.android.com/tools" 
    android:layout_width="match_parent" 
    android:layout_height="match_parent" 
    android:paddingBottom="@dimen/activity_vertical_margin" 
    android:paddingLeft="@dimen/activity_horizontal_margin" 
    android:paddingRight="@dimen/activity_horizontal_margin" 
    android:paddingTop="@dimen/activity_vertical_margin" 
    tools:context=".MainActivity" > 
 
    <TextView 
        android:id="@+id/scoreText" 
        android:layout_width="wrap_content" 
        android:layout_height="wrap_content" 
        android:text="Score: 0" 
        android:textSize="20sp" 
        android:layout_alignParentTop="true" 
        android:layout_centerHorizontal="true"/> 
 
    <TextView 
        android:id="@+id/timerText" 
        android:layout_width="wrap_content" 
        android:layout_height="wrap_content" 
        android:text="Time: 30" 
        android:textSize="20sp" 
        android:layout_below="@id/scoreText" 
        android:layout_centerHorizontal="true"/> 
 
    <Button 
        android:id="@+id/tapButton" 
android:layout_width="100dp" 
android:layout_height="100dp" 
android:text="Tap Me!" 
android:layout_centerInParent="true"/> 
</RelativeLayout> 

package com.example.program10;

import java.util.Random;
import android.annotation.SuppressLint;
import android.app.Activity;
import android.os.Bundle;
import android.os.CountDownTimer;
import android.view.View;
import android.view.ViewTreeObserver;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;

public class MainActivity extends Activity {
    private RelativeLayout mainLayout;
    private Button tapButton;
    private TextView scoreText, timerText;
    private int score = 0;
    private int layoutWidth, layoutHeight;
    private Random random = new Random();
    private CountDownTimer gameTimer;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        mainLayout = new RelativeLayout(this);

        scoreText = new TextView(this);
        scoreText.setText("Score: 0");
        scoreText.setTextSize(20);

        timerText = new TextView(this);
        timerText.setText("Time: 30");
        timerText.setTextSize(20);

        tapButton = new Button(this);
        tapButton.setText("Tap Me");

        RelativeLayout.LayoutParams scoreParams = new RelativeLayout.LayoutParams(
                RelativeLayout.LayoutParams.WRAP_CONTENT,
                RelativeLayout.LayoutParams.WRAP_CONTENT);
        scoreParams.addRule(RelativeLayout.ALIGN_PARENT_TOP);
        scoreParams.addRule(RelativeLayout.ALIGN_PARENT_LEFT);

        RelativeLayout.LayoutParams timerParams = new RelativeLayout.LayoutParams(
                RelativeLayout.LayoutParams.WRAP_CONTENT,
                RelativeLayout.LayoutParams.WRAP_CONTENT);
        timerParams.addRule(RelativeLayout.ALIGN_PARENT_TOP);
        timerParams.addRule(RelativeLayout.ALIGN_PARENT_RIGHT);

        RelativeLayout.LayoutParams buttonParams = new RelativeLayout.LayoutParams(
                RelativeLayout.LayoutParams.WRAP_CONTENT,
                RelativeLayout.LayoutParams.WRAP_CONTENT);
        buttonParams.addRule(RelativeLayout.CENTER_IN_PARENT);

        mainLayout.addView(scoreText, scoreParams);
        mainLayout.addView(timerText, timerParams);
        mainLayout.addView(tapButton, buttonParams);

        setContentView(mainLayout);

        mainLayout.getViewTreeObserver().addOnGlobalLayoutListener(
                new ViewTreeObserver.OnGlobalLayoutListener() {
                    @SuppressLint("NewApi") @Override
                    public void onGlobalLayout() {
                        layoutWidth = mainLayout.getWidth();
                        layoutHeight = mainLayout.getHeight();

                        // Compatibility fix
                        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.JELLY_BEAN) {
                            mainLayout.getViewTreeObserver().removeOnGlobalLayoutListener(this);
                        } else {
                            mainLayout.getViewTreeObserver().removeGlobalOnLayoutListener(this);
                        }
                    }
                });

        tapButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                score++;
                scoreText.setText("Score: " + score);
                moveButton();
            }
        });

        gameTimer = new CountDownTimer(30000, 1000) {
            @Override
            public void onTick(long millisUntilFinished) {
                timerText.setText("Time: " + millisUntilFinished / 1000);
            }

            @Override
            public void onFinish() {
                timerText.setText("Time: 0");
                tapButton.setEnabled(false);
                Toast.makeText(MainActivity.this,
                        "Game Over! Your Score: " + score,
                        Toast.LENGTH_LONG)
                        .show();
            }
        };
        gameTimer.start();
    }

    @SuppressLint("NewApi")
    private void moveButton() {
        if (layoutWidth == 0 || layoutHeight == 0)
            return;

        int buttonWidth = tapButton.getWidth();
        int buttonHeight = tapButton.getHeight();

        int randomX = random.nextInt(layoutWidth - buttonWidth);
        int randomY = random.nextInt(layoutHeight - buttonHeight);

        RelativeLayout.LayoutParams params = (RelativeLayout.LayoutParams) tapButton.getLayoutParams();
        params.leftMargin = randomX;
        params.topMargin = randomY;
        tapButton.setLayoutParams(params);
    }
}

